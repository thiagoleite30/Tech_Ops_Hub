"""
Django settings for setup project.

Generated by 'django-admin startproject' using Django 5.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path, os
from dotenv import load_dotenv

# Carregando variáveis de ambiente
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = str(os.getenv('SECRET_KEY'))

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Definindo o caminho/registro da aplicação
# Por ser desenvolvimento então

SITE_ID = 1

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.microsoft',
    'django.contrib.sites',
    'apps.move_gpos.apps.MoveGposConfig',
    'apps.tech_assets.apps.TechAssetsConfig',
]

AUTHENTICATION_BACKENDS = [
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by email
    'allauth.account.auth_backends.AuthenticationBackend',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "allauth.account.middleware.AccountMiddleware",
]

ROOT_URLCONF = 'setup.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'apps.tech_assets.context_processors_add.cart_item_count',
                'apps.tech_assets.context_processors_add.verifica_aprovacoes_pendentes',
                'apps.tech_assets.context_processors_add.get_profile_foto',
                'apps.tech_assets.context_processors_add.get_url_logout',
                'apps.tech_assets.context_processors_add.is_administradores_user',
                'apps.tech_assets.context_processors_add.is_aprovadores_user',
            ],



        },
    },
]

WSGI_APPLICATION = 'setup.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        # ou 'django.db.backends.sqlite3', 'django.db.backends.mysql', etc.
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': str(os.getenv('POSTGRES_DATABASE')),
        'USER': str(os.getenv('POSTGRES_USER')),
        'PASSWORD': str(os.getenv('POSTGRES_PASSWORD')),
        # ou o IP/hostname do servidor de banco de dados
        'HOST': str(os.getenv('POSTGRES_HOST')),
        # o número da porta, se não for o padrão
        'PORT': str(os.getenv('POSTGRES_PORT')),
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'pt-BR'

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'setup/static'),
]

STATIC_ROOT = os.path.join(BASE_DIR, 'static')


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Allauth e configurações especificas do provedor microsoft

SOCIALACCOUNT_PROVIDERS = {
    "microsoft": {
        "APPS": [
            {
                "client_id": str(os.getenv('CLIENT_ID')),
                "secret": str(os.getenv('CLIENT_SECRET')),
                "settings": {
                    "tenant": str(os.getenv('TENANT_ID')),
                    # Optional: override URLs (use base URLs without path)
                    # "login_url": "https://login.microsoftonline.com",
                    # "graph_url": "https://graph.microsoft.com",
                }
            }
        ],
        # 'REDIRECT_URI': 'http://localhost:8000/accounts/microsoft/login/callback/',
    }
}

SOCIALACCOUNT_STORE_TOKENS = True  # Para que o model guarde o social token

LOGIN_URL = str(os.getenv('URL_REDIRECT_POSLOGOUT'))

LOGIN_REDIRECT_URL = '/'  # ou a URL para onde deseja redirecionar após o login

# Altera o comportamento de, após login social do provedor, ir para uma tela padrão do Allauth. Vai direto pro URL definido acima
SOCIALACCOUNT_LOGIN_ON_GET = True

# Altera o comportamento de, após clicar no logout, ou digitar a URL de logout, ele não manda para uma página que pergunta se quero mesmo sair
ACCOUNT_LOGOUT_ON_GET = True

# ou a URL para onde deseja redirecionar após o logout - aqui tá indo pra index
LOGOUT_REDIRECT_URL = f'https://login.microsoftonline.com/common/oauth2/v2.0/logout?post_logout_redirect_uri={
    LOGIN_URL}'

# LOGOUT_REDIRECT_URL = '/login'
